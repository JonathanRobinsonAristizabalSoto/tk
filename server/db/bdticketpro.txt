-- Eliminar la base de datos si existe
DROP DATABASE IF EXISTS ticketpro;

-- Crear la base de datos
CREATE DATABASE IF NOT EXISTS ticketpro;
USE ticketpro;

-- Estructura de tabla para la tabla roles
CREATE TABLE roles (
    id_rol INT PRIMARY KEY AUTO_INCREMENT,
    nombre ENUM('Administrador', 'Supervisor', 'Soporte', 'Operador', 'Usuario') NOT NULL UNIQUE,
    descripcion TEXT,
    estado ENUM('Activo', 'Inactivo') NOT NULL DEFAULT 'Activo',
    fecha_creacion DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Estructura de tabla para la tabla permisos
CREATE TABLE permisos (
    id_permiso INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(255) NOT NULL UNIQUE,
    descripcion TEXT,
    fecha_creacion DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Estructura de tabla intermedia rolpermisos
CREATE TABLE rolpermisos (
    id_rol INT,
    id_permiso INT,
    fecha_asignacion DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id_rol, id_permiso),
    FOREIGN KEY (id_rol) REFERENCES roles(id_rol),
    FOREIGN KEY (id_permiso) REFERENCES permisos(id_permiso)
);

-- Estructura de tabla para la tabla usuarios
CREATE TABLE usuarios (
    id_usuario INT AUTO_INCREMENT PRIMARY KEY,
    tipo_documento VARCHAR(255) NOT NULL,
    documento VARCHAR(255) NOT NULL UNIQUE,
    nombre VARCHAR(255) NOT NULL,
    apellido VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    telefono VARCHAR(20),
    departamento VARCHAR(255),
    municipio VARCHAR(255),
    foto VARCHAR(255), -- Ruta de la imagen de perfil
    password VARCHAR(255) NOT NULL,
    id_rol INT NOT NULL,
    estado ENUM('Activo', 'Inactivo') NOT NULL DEFAULT 'Activo',
    fecha_registro DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    INDEX (email),
    INDEX (documento),
    FOREIGN KEY (id_rol) REFERENCES roles(id_rol)
);

-- Estructura de tabla para la tabla tipologias
CREATE TABLE tipologias (
    id_tipologia INT AUTO_INCREMENT PRIMARY KEY,
    tipologia ENUM('Formacion', 'Consultas', 'Certificacion', 'PQRSF', 'Otro') NOT NULL,
    subtipologia VARCHAR(255) NOT NULL,
    id_rol INT,
    estado_tipologia ENUM('Activo', 'Inactivo') NOT NULL DEFAULT 'Activo',
    fecha_creacion DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    INDEX (subtipologia),
    FOREIGN KEY (id_rol) REFERENCES roles(id_rol)
);

-- Estructura de tabla para la tabla programas
CREATE TABLE programas (
    id_programa INT AUTO_INCREMENT PRIMARY KEY,
    codigo VARCHAR(50) NOT NULL,
    version VARCHAR(50) NOT NULL,
    nombre VARCHAR(255) NOT NULL UNIQUE,
    descripcion TEXT,
    duracion INT NOT NULL,
    linea_tecnologica VARCHAR(255) NOT NULL,
    red_tecnologica VARCHAR(255) NOT NULL,
    red_de_conocimiento VARCHAR(255) NOT NULL,
    modalidad VARCHAR(255) NOT NULL,
    id_tipologia INT NOT NULL,
    estado ENUM('Activo', 'Inactivo') NOT NULL DEFAULT 'Activo',
    fecha_creacion DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_tipologia) REFERENCES tipologias(id_tipologia)
);

-- Estructura de tabla para la tabla ticket
CREATE TABLE ticket (
    id_ticket INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT NOT NULL,
    numero_ticket VARCHAR(50) NOT NULL,
    descripcion TEXT NOT NULL,
    prioridad ENUM('Alta', 'Media', 'Baja') NOT NULL,
    estado ENUM('Abierto', 'Progreso', 'Pendiente', 'Resuelto', 'Cerrado') NOT NULL,
    id_rol INT,
    id_programa INT,
    id_tipologia INT,
    fecha_creacion DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    fecha_actualizacion DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario),
    FOREIGN KEY (id_rol) REFERENCES roles(id_rol),
    FOREIGN KEY (id_programa) REFERENCES programas(id_programa),
    FOREIGN KEY (id_tipologia) REFERENCES tipologias(id_tipologia)
);

-- Estructura de tabla para la tabla comentario
CREATE TABLE comentario (
    id_comentario INT PRIMARY KEY AUTO_INCREMENT,
    id_ticket INT,
    id_usuario INT,
    comentario TEXT NOT NULL,
    fecha_creacion DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    INDEX (id_ticket),
    INDEX (id_usuario),
    FOREIGN KEY (id_ticket) REFERENCES ticket(id_ticket),
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)
);

-- Estructura de tabla para la tabla evento
CREATE TABLE evento (
    id_evento INT PRIMARY KEY AUTO_INCREMENT,
    id_ticket INT,
    accion VARCHAR(255) NOT NULL,
    id_usuario INT,
    fecha_evento DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    INDEX (id_ticket),
    INDEX (id_usuario),
    FOREIGN KEY (id_ticket) REFERENCES ticket(id_ticket),
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)
);

-- Volcado de datos para la tabla roles
INSERT INTO roles (nombre, descripcion, estado, fecha_creacion) VALUES
('Administrador', 'Acceso completo al sistema.', 'Activo', '2023-10-01 10:00:00'),
('Supervisor', 'Supervisa el trabajo del soporte.', 'Activo', '2023-10-01 10:00:00'),
('Soporte', 'Resuelve tickets y asistencia técnica.', 'Activo', '2023-10-01 10:00:00'),
('Operador', 'Crea y gestiona tickets básicos.', 'Activo', '2023-10-01 10:00:00'),
('Usuario', 'Crea tickets y realiza solicitudes.', 'Activo', '2023-10-01 10:00:00');

-- Volcado de datos para la tabla permisos
INSERT INTO permisos (nombre, descripcion, fecha_creacion) VALUES
('Crear', 'Permiso para crear usuarios tipolgias programas tickets y comentarios en el sistema.', '2023-10-01 10:00:00'),
('Ver', 'Permiso para visualizar usuarios tipolgias programas tickets y comentarios', '2023-10-01 10:00:00'),
('Editar', 'Permiso para editar los detalles de un usuario tipolgia programa ticket y comentario', '2023-10-01 10:00:00'),
('Eliminar', 'Permiso para eliminar una tipolgia programa ticket y comentario.', '2023-10-01 10:00:00'),
('Activar', 'Permiso para activar un usuario tipolgia o programa.', '2023-10-01 10:00:00'),
('Desactivar', 'Permiso para desactivar un usuario tipolgia o programa.', '2023-10-01 10:00:00');

-- Asignación de permisos a los roles en la tabla intermedia rolpermisos
INSERT INTO rolpermisos (id_rol, id_permiso, fecha_asignacion) VALUES
(1, 1, '2023-10-01 10:00:00'), -- Administrador: Crear
(1, 2, '2023-10-01 10:00:00'), -- Administrador: Ver
(1, 3, '2023-10-01 10:00:00'), -- Administrador: Editar
(1, 4, '2023-10-01 10:00:00'), -- Administrador: Eliminar
(1, 5, '2023-10-01 10:00:00'), -- Administrador: Activar
(1, 6, '2023-10-01 10:00:00'), -- Administrador: Desactivar
(2, 2, '2023-10-01 10:00:00'), -- Supervisor: Ver
(2, 3, '2023-10-01 10:00:00'), -- Supervisor: Editar
(2, 5, '2023-10-01 10:00:00'), -- Supervisor: Activar
(2, 6, '2023-10-01 10:00:00'), -- Supervisor: Desactivar
(3, 2, '2023-10-01 10:00:00'), -- Soporte: Ver
(3, 3, '2023-10-01 10:00:00'), -- Soporte: Editar
(4, 1, '2023-10-01 10:00:00'), -- Operador: Crear
(4, 2, '2023-10-01 10:00:00'), -- Operador: Ver
(5, 1, '2023-10-01 10:00:00'), -- Usuario: Crear
(5, 2, '2023-10-01 10:00:00'); -- Usuario: Ver